
#include "contact.h"
void ChackCapacity(contact* dest)
{
	if (dest->size == dest->capacity)
	{
		People* ptr = (People*)realloc(dest->contact, (dest->capacity + 2) * sizeof(struct People));
		if (ptr != NULL)
		{
			dest->contact = ptr;
			dest->capacity += 2;
			printf("增容成功！\n");

		}

	}
}
int Find(contact* dest, char name[])//缺陷无法寻找相同名字的人！
{
	int i = 0;
	for (i = 0; i < dest->size; i++)
	{
		if (0 == strcmp(name, dest->contact[i].name))
		{
			return i;
		}
	}
	return -1;
}

void loadcontact(contact* dest)
{
	People tmp = { 0 };
	FILE* pfread = fopen("contact.dat", "rb");
	if (pfread == NULL)
	{
		printf("loadcontact:%s\n", strerror(errno));
		return;
	}
	int i = 0;
	while(fread(&tmp, sizeof(People), 1, pfread))
	{
		ChackCapacity(dest);
		dest->contact[dest->size] = tmp;
		dest->size++;
	}
	fclose(pfread);
	pfread = NULL;
}

void init(contact* dest)//进行初始化！！
{
	dest->contact = (People*)malloc(3 * sizeof(struct People));
	if (dest->contact == NULL)
	{
		return;
	}
	dest->size = 0;
	dest->capacity = DEFSIZE;

	//把文件中已经存放的通讯录的信息加载到通讯录里面！
	loadcontact(dest);
}



void addcontact(contact* dest)//进行通讯录的添加！
{
	ChackCapacity(dest);
	//1.如果满了就赠容，没有满就不敢
	//然后增加数据！

	printf("请输入姓名:>");
	scanf("%s", dest->contact[dest->size].name);
	printf("请输入性别:>");
	scanf("%s", dest->contact[dest->size].sex);
	printf("请输入电话:>");
	scanf("%s", dest->contact[dest->size].tele);
	printf("请输入地址:>");
	scanf("%s", dest->contact[dest->size].addr);
	printf("请输入年龄:>");
	scanf("%d", &dest->contact[dest->size].age);
	dest->size++;
	printf("添加成功！！\n");
	/*if (dest->size == MAX)
	{
		printf("通讯录容量已满！");
	}
	else
	{
		printf("请输入姓名:>");
		scanf("%s", dest->contact[dest->size].name);
		printf("请输入性别:>");
		scanf("%s", dest->contact[dest->size].sex);
		printf("请输入电话:>");
		scanf("%s", dest->contact[dest->size].tele);
		printf("请输入地址:>");
		scanf("%s", dest->contact[dest->size].addr);
		printf("请输入年龄:>");
		scanf("%d", &dest->contact[dest->size].age);

	}
	dest->size++;
	printf("添加成功！！\n");*/
}

void showcontact(contact* dest)//进行通讯录的打印！
{
	if (dest->size == 0)
	{
		printf("通讯录为空！\n");
	}
	else
	{
		printf("%-20s\t%-5s\t%-5s\t%-13s\t%-30s\n", "名字", "年龄", "性别", "电话", "地址");
		int i = 0;
		for (i = 0; i < dest->size; i++)
		{
			printf("%-20s\t%-5d\t%-5s\t%-13s\t%-30s\n"
				, dest->contact[i].name
				, dest->contact[i].age
				, dest->contact[i].sex
				, dest->contact[i].tele
				, dest->contact[i].addr);
		}
	}


}

void searchcontact(contact* dest)
{
	char name[NAME_MAX];
	if (dest->size == 0)
	{
		printf("通讯录为空！\n");
	}
	else
	{
		printf("请输入要查找的名字:>");
		scanf("%s", name);
		int ret = Find(dest, name);
		if (ret == -1)
		{
			printf("该通讯录不存在该人物！\n");
		}
		else
		{
			printf("%-20s\t%-5s\t%-5s\t%-13s\t%-30s\n", "名字", "年龄", "性别", "电话", "地址");
			printf("%-20s\t%-5d\t%-5s\t%-13s\t%-30s\n"
				, dest->contact[ret].name
				, dest->contact[ret].age
				, dest->contact[ret].sex
				, dest->contact[ret].tele
				, dest->contact[ret].addr);
		}

	}

}

void modifcontact(contact* dest)
{
	if (dest->size == 0)
	{
		printf("通讯录为空！\n");
	}
	else
	{
		char name[NAME_MAX];
		printf("请输入你要修改的人的名字:>");
		scanf("%s", name);
		int ret = Find(dest, name);
		if (ret == -1)
		{
			printf("通讯录无该人物！\n");
		}
		else
		{
			printf("请输入姓名:>");
			scanf("%s", dest->contact[ret].name);
			printf("请输入性别:>");
			scanf("%s", dest->contact[ret].sex);
			printf("请输入电话:>");
			scanf("%s", dest->contact[ret].tele);
			printf("请输入地址:>");
			scanf("%s", dest->contact[ret].addr);
			printf("请输入年龄:>");
			scanf("%d", &dest->contact[ret].age);
		}
	}


}

void delcontact(contact* dest)
{
	if (dest->size == 0)
	{
		printf("该通讯录为空！\n");
	}
	else
	{
		char name[NAME_MAX];
		printf("请输入要删除的用户的名字:>");
		scanf("%s", name);
		int ret = Find(dest, name);
		if (ret == -1)
		{
			printf("该通讯录不存在该用户！\n");
		}
		else
		{
			int i = ret;
			for (i = ret; i < dest->size - 1; i++)
			{
				dest->contact[i] = dest->contact[i + 1];
			}
			dest->size--;
			printf("删除成功！\n");
		}
	}
}


void savecontat(contact* dest)
{
	FILE* pfwrite = fopen("contact.dat","wb");
	if (pfwrite == NULL)
	{
		printf("savecontat:%s\n", strerror(errno));
	}
	//写通讯录的数据到文件中！
	int i = 0;
	for (i = 0; i < dest->size; i++)
	{
		fwrite(&(dest->contact[i]), sizeof(People), 1, pfwrite);
	}
	printf("存储成功！\n");
	fclose(pfwrite);
	pfwrite = NULL;



}
