#define _CRT_SECURE_NO_WARNINGS
#include "game.h"
#include<stdio.h>


void turn (char a[ROWS][COLS], int row, int col, char get)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < ROWS; i++)
	{
		for (j = 0; j < COLS; j++)
		{

			*(&a[i][j]) = get;

		}

	}



}

void displayboard(char a[ROWS][COLS], int row, int col)
{
	int i = 0;
	int j = 0;


	for (i = 0; i <= row; i++)
	{
		printf("%d  ", i);

	}
	printf("\n");

	for(i = 1;i<=row;i++)
	{
		printf("%d ", i);
		for (j = 1; j <= col; j++)
		{
			printf(" %c ", *(&a[i][j]));

		}
		printf("\n");
	}




}


void set(char a[ROWS][COLS], int row, int col)
{

	int count = easy_count;
	while (count)
	{
		int x = (rand() % 9)+1;
		int y = (rand() % 9)+1;
		if (*(&a[x][y]) == '0')
		{

         *(&a[x][y]) = '1';
		 count--;
		}


	}





}

int get_count(char b[ROWS][COLS],int x,int y)
{
return	*(&b[x][y - 1]) +
		*(&b[x][y + 1]) +
		*(&b[x - 1][y]) +
		*(&b[x - 1][y + 1]) +
		*(&b[x - 1][y - 1]) +
		*(&b[x + 1][y - 1]) +
		*(&b[x + 1][y]) +
		*(&b[x + 1][y + 1]) - 8 * '0';


}





void find(char a[ROWS][COLS], char b[ROWS][COLS])
{

while(1)
{

	printf("请输入行数和列数！:>");
	int x = 0;
	int y = 0;
	scanf("%d%d", &x, &y);

	if (x>=1 && x<=9 && y>=1 && y<=9)
	{
		if (*(&b[x][y]) == '1')
		{
			printf("你被炸死了！！！\n");
			printf("game over!\n");
			displayboard(b, ROW, COL);
			break;
		}
		if (*(&b[x][y]) != '1')
		{
			int count = get_count(b,x,y);

			*(&a[x][y]) = count+'0';
			displayboard(a, ROW, COL);


		}
		else
		{

			printf("输入非法请重新输入\n");
		}


	}
}




}
